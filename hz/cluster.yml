# If you intended to deploy Kubernetes in an air-gapped environment,
# please consult the documentation on how to configure custom RKE images.
nodes:
  - address: 10.200.1.101
    port: "22"
    internal_address: ""
    role:
    - controlplane
    - worker
    - etcd
    hostname_override: ""
    user: root
    docker_socket: /var/run/docker.sock
    ssh_key: ""
    ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
    ssh_cert: ""
    ssh_cert_path: ""
    labels: {}
    taints: []
  - address: 10.200.1.102
    port: "22"
    internal_address: ""
    role:
    - controlplane
    - worker
    - etcd
    hostname_override: ""
    user: root
    docker_socket: /var/run/docker.sock
    ssh_key: ""
    ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
    ssh_cert: ""
    ssh_cert_path: ""
    labels: {}
    taints: []
    #- address: 10.200.1.103
    #port: "22"
    #internal_address: ""
    #role:
    #- worker
    #hostname_override: ""
    #user: root
    #docker_socket: /var/run/docker.sock
    #ssh_key: ""
    #ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
    #ssh_cert: ""
    #ssh_cert_path: ""
    #labels: {}
    #taints: []
  - address: 10.200.1.104
    port: "22"
    internal_address: ""
    role:
    - worker
    hostname_override: ""
    user: root
    docker_socket: /var/run/docker.sock
    ssh_key: ""
    ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
    ssh_cert: ""
    ssh_cert_path: ""
    labels: {}
    taints: []
  - address: 10.200.1.105
    port: "22"
    internal_address: ""
    role:
    - controlplane
    - worker
    - etcd
    hostname_override: ""
    user: root
    docker_socket: /var/run/docker.sock
    ssh_key: ""
    ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
    ssh_cert: ""
    ssh_cert_path: ""
    labels: {}
    taints: []
  - address: 10.200.1.106
    port: "22"
    internal_address: ""
    role:
    - worker
    hostname_override: ""
    user: root
    docker_socket: /var/run/docker.sock
    ssh_key: ""
    ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
    ssh_cert: ""
    ssh_cert_path: ""
    labels: {}
    taints: []
services:
  etcd:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    external_urls: []
    ca_cert: ""
    cert: ""
    key: ""
    path: ""
    uid: 0
    gid: 0
    snapshot: null
    retention: ""
    creation: ""
    backup_config: null
  kube-api:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    service_cluster_ip_range: 10.43.0.0/16
    service_node_port_range: ""
    pod_security_policy: false
    always_pull_images: false
    secrets_encryption_config: null
    audit_log: null
    admission_configuration: null
    event_rate_limit: null
  kube-controller:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    cluster_cidr: 10.42.0.0/16
    service_cluster_ip_range: 10.43.0.0/16
  scheduler:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
  kubelet:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    cluster_domain: cluster.local
    infra_container_image: ""
    cluster_dns_server: 10.43.0.10
    fail_swap_on: false
    generate_serving_certificate: false
  kubeproxy:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
network:
  plugin: "calico" 
  options: {}
  mtu: 0
  node_selector: {}
  update_strategy: null
  tolerations: []
authentication:
  strategy: x509
  sans: []
  webhook: null
addons: |-
  ---
  apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZPRENDQkNDZ0F3SUJBZ0lTQkxEUGFCVXdHL1RlcTZqVXp4Y2YvcStGTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNakE0TURJd05qUTJNREJhRncweU1qRXdNekV3TmpRMU5UbGFNQnN4R1RBWEJnTlZCQU1UCkVHSmxjbXhwYm1SbGRtOXdjeTVqYjIwd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFEYXZucG40Qng1bU5yeEkrNmpOc2hPYWdjOU80ZG5MbDdyaUxDS2FodEVzUEFJbnZNWDA5M1kxZk9uNFptSApqWHJxNGxrMHJVN1lkRG55aHZGUTJBTkh2Yjd6Uzdsa3J4U3lTdGVQeUVWODljam4vVFV2M2s1TEJFSmxWbGxJCmF1dGY1OERPeXVQN0JYcVYzYk5wZWkrMFJBQ1h2WkM2TFBMMU8rTmdFOGRlQmU4UWNTS0xNWVFwTnJVVlJiQkIKakt4cTFXY3VpUTFYQnhWQWQ0empyQTNwV0NOb3R0RUxZRzkxVDNjRW82S3doK2RPTDZKU1BNamxIS2FidWl1egovSUZuUkFrc0VKeFQveDdleFd0MGhWUzNUTnl1UXA1cHlkSWlQZHNhWWpjZzgrK0hHWlBDRW5aZlFxbkNUZUpxCmxvbGRtY1FIeWdQU1drbVVTd21UaWh0L0FnTUJBQUdqZ2dKZE1JSUNXVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRApWUjBPQkJZRUZKWlJxSHorcXhXUzRwZllUN2ROWFBWcTR5ZUhNQjhHQTFVZEl3UVlNQmFBRkJRdXN4ZTNXRmJMCnJsQUpRT1lmcjUyTEZNTEdNRlVHQ0NzR0FRVUZCd0VCQkVrd1J6QWhCZ2dyQmdFRkJRY3dBWVlWYUhSMGNEb3YKTDNJekxtOHViR1Z1WTNJdWIzSm5NQ0lHQ0NzR0FRVUZCekFDaGhab2RIUndPaTh2Y2pNdWFTNXNaVzVqY2k1dgpjbWN2TUM4R0ExVWRFUVFvTUNhQ0Vpb3VZbVZ5YkdsdVpHVjJiM0J6TG1OdmJZSVFZbVZ5YkdsdVpHVjJiM0J6CkxtTnZiVEJNQmdOVkhTQUVSVEJETUFnR0JtZUJEQUVDQVRBM0Jnc3JCZ0VFQVlMZkV3RUJBVEFvTUNZR0NDc0cKQVFVRkJ3SUJGaHBvZEhSd09pOHZZM0J6TG14bGRITmxibU55ZVhCMExtOXlaekNDQVFJR0Npc0dBUVFCMW5rQwpCQUlFZ2ZNRWdmQUE3Z0IxQUNsNXZ2Q2VPVGtoOEZaem4yT2xkK1crVjMyY1lBcjQrVTFkSmx3bFhjZUVBQUFCCmdsMkV6RGtBQUFRREFFWXdSQUlnUytTdVVtOGJiQ3RwMmxnTWZueUljckczbFRuN3JRUnh2SGlEamF1a2R0a0MKSUgxb0c3Z25EY0lEdnUyYmp5TXYzbUhZTERoZkdScS9VYzE3ditkRFJRKy9BSFVBYjFOMnJESHdNUm5ZbVFDawpVUlgvZHhVY0Vka0N3UUFwQm8yeUNKbzMyUk1BQUFHQ1hZVE1aZ0FBQkFNQVJqQkVBaUF1THdQYmFESXRLNTNLCnBYbFpuMTVVTzJ3THJOTDUvQzNwVWJjUmxvUEl4d0lnRlU3NFJwd25xRXNEamw1MEhVaFhWU2Y5QWpBODFteGgKUThzVU1MZWdnQ0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlmMDVNV1Z0SVptYXRBRThTMm94SW5MSTVDZwpzM2pVTVEwcFBhMUxUdzhmdTRrSk9BKzNrMndOY1FoQ3BwdlMxdzVaaHlhWHFORjFpV2ozejRJMzFMUHJNR0t5CnRmQUZiMllJUWhCaXE5ZFJOQzJBbUdOT0txQVZzOU0vL1kvZnZkaHJvY0EzNmNVRzFDQXhrcU9FMnVmZkJpVHQKcVRFRjhRWHFkd1BlZHJDSUN4NDNyUkYwVUY1YlFGU0hzMktQUGtyL3E4U3lHeHFXdE00eVVzdEhwQzJ5QmhiaQpBVExpdHFsWWZtZU42L0VwRkRJa0dUVGYyV2pJMTluYW9id1E1SVFUMmI2SVV0U1hwK2lhWHRQZ2tUWWhvSURqCjUwR0VWcDl3b3g5ZldEQnBJMXJYNkUvcGhaSmpJQW5nZzFIa3FVcE81b0FxUWlCREpxTXdBVktCMVF3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQwpvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMCndZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QKTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250Swo0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1CmJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkKc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WgpYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0CkZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMKU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbApQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EClR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMQpjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4Cit0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIKQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdQpiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFClUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQwo1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXCjlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcKV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TwpoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDCkRmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRGF2bnBuNEJ4NW1OcngKSSs2ak5zaE9hZ2M5TzRkbkxsN3JpTENLYWh0RXNQQUludk1YMDkzWTFmT240Wm1IalhycTRsazByVTdZZERueQpodkZRMkFOSHZiN3pTN2xrcnhTeVN0ZVB5RVY4OWNqbi9UVXYzazVMQkVKbFZsbElhdXRmNThET3l1UDdCWHFWCjNiTnBlaSswUkFDWHZaQzZMUEwxTytOZ0U4ZGVCZThRY1NLTE1ZUXBOclVWUmJCQmpLeHExV2N1aVExWEJ4VkEKZDR6anJBM3BXQ05vdHRFTFlHOTFUM2NFbzZLd2grZE9MNkpTUE1qbEhLYWJ1aXV6L0lGblJBa3NFSnhUL3g3ZQp4V3QwaFZTM1ROeXVRcDVweWRJaVBkc2FZamNnOCsrSEdaUENFblpmUXFuQ1RlSnFsb2xkbWNRSHlnUFNXa21VClN3bVRpaHQvQWdNQkFBRUNnZ0VBY0RvNTR3R0Ftb0pxRWo0MU9WZnAvUkU1RlpsdEp1c0xtQnhSTnpLcE90enMKeWYrRENUNlNHNlhwbE1DU1hKR2g5dENhcEFRbTU3YjU1QXlIMHNxQkpGV2Rtb1hIWUhqVFRZWklnbVJtQW02MwozUTUwTTFNREtFblBKdDdlZitFYlVlRTljdHQxakZ5TFFFaTJ1KzhNZXBoSkZaRVVwL0JYMXFvYlJqZmZtY1RPCnlHa2hoQkcvUzllbVNaVkcrRTRFS2ROR3dRd2pDdmYzRTFzY1hhQkdjYktLbE1DSzFydXA2aXNTMzl1SGl1alYKU0MvNUFXMjhqQVVxblFab1BnZjNwVHl2RlJaamo0aXhqQmF3elRBVEhGZEc4bER5aEhncDB0aE1xSDdlbFpqVwpNU050dHRNTGluQnpKOU9IMCtzQUw2REhqT2E1K1BpQXhXVWpIQUZTQVFLQmdRRHN4Zy9xakpHd3VEVGRYNHEwCldVWk5yUHJIVWlFNWtwVmpwMjVYcUNMQjg4WlZ3Uk9reUlDSyt4cG5neEFPT0g2alAxRkx2Nk9za1ppY2RBN0YKVjJzS202RVZvamQ5RkFYM1g2aHJiZzRDeHRsSUpsQjdjdlZncW9nQ1NxVThCTXU4Y2c3UkNaeTFtc21xU3pLTQpYWUpkVFhUTVhaTHAvWk1DRWp0UkxKSVNvUUtCZ1FEc2daL3dzUS8rbFZFaE42N01TNFMwN2NzbU1XbVArNHN5CjhXWHAwbDlNck5ZN2Vwb1p3QjFZT0lKdjlxZk9aN1d5aWZ4Nm5ycUJEbDhFZVVlWFRHei9VRU5hTjZQeGxZU1IKQStTUHJnVU5nVVpNeEt3OHY1Q3FKcC9jMDA0U3BkREVOb2VTVjN5OVVKZjFPdi91QmQ2NVNtMUZ4SXArWk42MwpTcllQQVlXYUh3S0JnUUNRVGE0Sm54NXorL0NNTXR5UVNoQ2s2cFgwd01OckdVRmUrUDR4QWxJY3J2dmo2OGFUCkdYZnVQRmU5V28yQWZVSUJNR2ZWcUxpU1JqSWl1RUVBV09UdUZDZTZ6YURQNUZJMmorQlBpVVdVdjZoUlpyaUsKWkdmVVFGcWdPdW8xaUI2N2ZUQTJpb3N0eTJhNUdSZDNvTTRCRzJIaDQrM1VHaTFzaDd3TEh3VHZ3UUtCZ0NrKwpqY3JteGZoS3grUTRGcmF2OE11d3NIM1BuaTRxMnVLZWNIeHZZSWs1bHY2MmFjdFYwb2hCQ3BaRitJdXBVR2w3CllObHRkdTdzdDZ0TER5NFdlT2VwY3FWNEVKSWYxZ2VJRzBMblFTQlN6QlMxTTZoQWJCVVFPVTdFVnRndnJKR2IKUk5kRGhKQnJUcVRJamp0UE1NRTFkb3IxTklYSVI0TEZkNngwUW4xWEFvR0FKam1PNk5zcHJLR29kRFJ2eUU2UAp4dklPLytVOEpiNVpSeENRcitLekR2TzdLZzVTS0xIb1piQWRsbk15YmlOZEV6MzlRYUdpaDdvVmFmdUQ5MzZGClRIRkR4OGlKYjdaNHJpakFwOE1hM296akhJK0F5a3E5MnFJVGp5enhGaDlJYkMzNmUvVlErVDJQZlpZRmtkSkkKWUxQc1JrVEk4U05iOFVBVlZqVXc1NTA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  kind: Secret
  metadata:
    creationTimestamp: null
    name: ingress-default-cert
    namespace: ingress-nginx
  type: kubernetes.io/tls
addons_include: []
system_images:
  etcd: rancher/mirrored-coreos-etcd:v3.5.3
  alpine: rancher/rke-tools:v0.1.80
  nginx_proxy: rancher/rke-tools:v0.1.80
  cert_downloader: rancher/rke-tools:v0.1.80
  kubernetes_services_sidecar: rancher/rke-tools:v0.1.80
  kubedns: rancher/mirrored-k8s-dns-kube-dns:1.21.1
  dnsmasq: rancher/mirrored-k8s-dns-dnsmasq-nanny:1.21.1
  kubedns_sidecar: rancher/mirrored-k8s-dns-sidecar:1.21.1
  kubedns_autoscaler: rancher/mirrored-cluster-proportional-autoscaler:1.8.5
  coredns: rancher/mirrored-coredns-coredns:1.9.0
  coredns_autoscaler: rancher/mirrored-cluster-proportional-autoscaler:1.8.5
  nodelocal: rancher/mirrored-k8s-dns-node-cache:1.21.1
  kubernetes: rancher/hyperkube:v1.23.7-rancher1
  flannel: rancher/mirrored-coreos-flannel:v0.15.1
  flannel_cni: rancher/flannel-cni:v0.3.0-rancher6
  calico_node: rancher/mirrored-calico-node:v3.22.0
  calico_cni: rancher/mirrored-calico-cni:v3.22.0
  calico_controllers: rancher/mirrored-calico-kube-controllers:v3.22.0
  calico_ctl: rancher/mirrored-calico-ctl:v3.22.0
  calico_flexvol: rancher/mirrored-calico-pod2daemon-flexvol:v3.22.0
  canal_node: rancher/mirrored-calico-node:v3.22.0
  canal_cni: rancher/mirrored-calico-cni:v3.22.0
  canal_controllers: rancher/mirrored-calico-kube-controllers:v3.22.0
  canal_flannel: rancher/mirrored-flannelcni-flannel:v0.17.0
  canal_flexvol: rancher/mirrored-calico-pod2daemon-flexvol:v3.22.0
  weave_node: weaveworks/weave-kube:2.8.1
  weave_cni: weaveworks/weave-npc:2.8.1
  pod_infra_container: rancher/mirrored-pause:3.6
  ingress: rancher/nginx-ingress-controller:nginx-1.2.1-rancher1
  ingress_backend: rancher/mirrored-nginx-ingress-controller-defaultbackend:1.5-rancher1
  ingress_webhook: rancher/mirrored-ingress-nginx-kube-webhook-certgen:v1.1.1
  metrics_server: rancher/mirrored-metrics-server:v0.6.1
  windows_pod_infra_container: rancher/mirrored-pause:3.6
  aci_cni_deploy_container: noiro/cnideploy:5.1.1.0.1ae238a
  aci_host_container: noiro/aci-containers-host:5.1.1.0.1ae238a
  aci_opflex_container: noiro/opflex:5.1.1.0.1ae238a
  aci_mcast_container: noiro/opflex:5.1.1.0.1ae238a
  aci_ovs_container: noiro/openvswitch:5.1.1.0.1ae238a
  aci_controller_container: noiro/aci-containers-controller:5.1.1.0.1ae238a
  aci_gbp_server_container: noiro/gbp-server:5.1.1.0.1ae238a
  aci_opflex_server_container: noiro/opflex-server:5.1.1.0.1ae238a
ssh_key_path: ~/.ssh/id_rsa_aos_hz_rke
ssh_cert_path: ""
ssh_agent_auth: false
authorization:
  mode: rbac
  options: {}
ignore_docker_version: null
enable_cri_dockerd: null
kubernetes_version: ""
private_registries: []
ingress:
  provider: "nginx"
  options: {}
  node_selector: {}
  extra_args:
    default-ssl-certificate: "ingress-nginx/ingress-default-cert"
  dns_policy: "ClusterFirstWithHostNet"
  extra_envs: []
  extra_volumes: []
  extra_volume_mounts: []
  update_strategy: null
  http_port: 0
  https_port: 0
  network_mode: ""
  tolerations: []
  default_backend: null
  default_http_backend_priority_class_name: ""
  nginx_ingress_controller_priority_class_name: ""
  default_ingress_class: null
cluster_name: ""
cloud_provider:
  name: ""
prefix_path: ""
win_prefix_path: ""
addon_job_timeout: 0
bastion_host:
  address: ""
  port: ""
  user: ""
  ssh_key: ""
  ssh_key_path: ""
  ssh_cert: ""
  ssh_cert_path: ""
  ignore_proxy_env_vars: false
monitoring:
  provider: ""
  options: {}
  node_selector: {}
  update_strategy: null
  replicas: null
  tolerations: []
  metrics_server_priority_class_name: ""
restore:
  restore: false
  snapshot_name: ""
rotate_encryption_key: false
dns: null
